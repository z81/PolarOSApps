// Generated by CoffeeScript 1.6.3
(function() {
  var app;

  app = angular.module('app', ['ngCookies']);

  app.controller('mainCtrl', function($scope, $http, $timeout) {
    $scope.menu = {
      logo: 'assets/images/logo.png',
      items: [
        {
          name: 'Схемы',
          url: '#'
        }, {
          name: 'Люди',
          url: '#'
        }, {
          name: 'Сообщества',
          url: '#'
        }, {
          name: 'Обсуждения',
          url: '#'
        }, {
          name: 'Настройки',
          url: '#'
        }
      ]
    };
    $scope.showMessage = function(msg, type, time) {
      if (msg == null) {
        msg = '';
      }
      if (type == null) {
        type = 'success';
      }
      if (time == null) {
        time = 10000;
      }
      $('.message').slideDown();
      return $timeout(function() {
        return $('.message').slideUp();
      }, time);
    };
    $timeout(function() {
      return $scope.showMessage();
    }, 3000);
    $scope.closeContainer = function() {
      return Scheme.closeContainer();
    };
    $scope.addElement = function(name) {
      var id;
      id = 0;
      return $scope.scheme.createElement({
        Name: name,
        Id: id,
        X: 300,
        Y: 100
      });
    };
    $scope.$watch('element_search', function() {
      return $timeout(function() {
        return $scope.bindAccordionEvents();
      });
    });
    $http({
      method: 'GET',
      url: 'hiasm/delphi_utf/Elements_list.txt'
    }).success(function(data, status, headers, config) {
      $scope.elements = data;
      return $timeout(function() {
        return $scope.bindAccordionEvents().eq(0).click();
      });
    });
    $scope.bindAccordionEvents = function() {
      return jQuery('.js-accordion-trigger').not('.isbinded')
    .on('click', function(){
                                jQuery(this).parent().find('ul').slideToggle('fast');
                                jQuery(this).parent().toggleClass('is-expanded');
                                if(event)
                                  event.preventDefault();
       })
    .addClass('isbinded')
      ;
    };
    $scope.onSelectElement = function() {
      return $timeout(function() {
        console.log(Scheme.selected_element.Property);
        return $scope.props = Scheme.selected_element.Property;
      });
    };
    return $http({
      method: 'GET',
      url: 'assets/schemes/Notepad.sha'
    }).success(function(data, status, headers, config) {
      $scope.scheme = new Scheme();
      return $scope.scheme.load(data);
    });
  });

  app.controller('panelCtrl', function($scope, $cookieStore) {
    $scope.elements_panel_pin = $cookieStore.get('elements_panel_pin');
    $scope.elements_panel_open = $cookieStore.get('elements_panel_open');
    $scope.props_panel_pin = $cookieStore.get('props_panel_pin');
    $scope.props_panel_hidden = $cookieStore.get('props_panel_hidden');
    if ($scope.elements_panel_pin) {
      $scope.elements_panel_open = true;
    }
    if ($scope.props_panel_pin) {
      $scope.props_panel_hidden = true;
    }
    $scope.togglePanelPin = function(name) {
      $scope[name] = !$scope[name];
      return $cookieStore.put(name, $scope[name]);
    };
    return $scope.togglePanel = function(name) {
      $scope[name] = !$scope[name];
      return $cookieStore.put(name, $scope[name]);
    };
  });

  app.directive('navigation', function() {
    return {
      templateUrl: 'assets/views/navigation.html'
    };
  });

  app.directive('footer', function() {
    return {
      templateUrl: 'assets/views/footer.html'
    };
  });

  app.directive('scrollPosition', function($window) {
    return {
      scope: {
        scroll: '=scrollPosition'
      },
      link: function(scope, element, attrs) {
        var handler, windowEl;
        windowEl = angular.element($window);
        handler = function() {
          return scope.scroll = windowEl.scrollTop();
        };
        windowEl.on('scroll', scope.$apply.bind(scope, handler));
        return handler();
      }
    };
  });

  angular.bootstrap(document, ['app']);

}).call(this);
